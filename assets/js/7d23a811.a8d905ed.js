"use strict";(self.webpackChunkopensource_website=self.webpackChunkopensource_website||[]).push([[6908],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),g=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=g(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=g(n),d=o,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||l;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var g=2;g<l;g++)a[g]=n[g];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>g});var r=n(7462),o=(n(7294),n(3905));const l={sidebar_position:1},a="1. Logging",i={unversionedId:"help/Tutorials/nodejs/basics/logging",id:"help/Tutorials/nodejs/basics/logging",title:"1. Logging",description:"It may becomes hard to debug applications running in a distributed manner. Make shure you use alot of debugging!",source:"@site/docs/help/Tutorials/nodejs/03-basics/01-logging.md",sourceDirName:"help/Tutorials/nodejs/03-basics",slug:"/help/Tutorials/nodejs/basics/logging",permalink:"/docs/help/Tutorials/nodejs/basics/logging",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"The Basics",permalink:"/docs/category/the-basics"},next:{title:"2. EventEmitters",permalink:"/docs/help/Tutorials/nodejs/basics/eventemitters"}},s={},g=[{value:"The Basics in distributed systems",id:"the-basics-in-distributed-systems",level:2},{value:"Example using the <code>console</code>",id:"example-using-the-console",level:2},{value:"Logging to a <code>file</code>",id:"logging-to-a-file",level:2},{value:"converting the loggers to an <code>eventemitter</code>",id:"converting-the-loggers-to-an-eventemitter",level:2}],c={toc:g},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"1-logging"},"1. Logging"),(0,o.kt)("p",null,"It may becomes hard to debug applications running in a distributed manner. Make shure you use alot of debugging!"),(0,o.kt)("h2",{id:"the-basics-in-distributed-systems"},"The Basics in distributed systems"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NoPE")," provides a Basic logging concept for this purpose. Lets figure it out by a Handson Example."),(0,o.kt)("h2",{id:"example-using-the-console"},"Example using the ",(0,o.kt)("inlineCode",{parentName:"h2"},"console")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Lets create our logger:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// First lets install nope using npm\nconst nope = require("nope-js-node");\n\n// Create our Observable:\nconst logger = nope.getNopeLogger("demo");\n')),(0,o.kt)("p",null,"Now, that our logger has been created, we are able to log our first messages:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"logger.trace(\"hello from 'trace' level\")\nlogger.debug(\"hello from 'debug' level\")\nlogger.info(\"hello from 'info' level\")\nlogger.warn(\"hello from 'warn' level\")\nlogger.error(\"hello from 'error' level\")\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"2023-03-28T15:50:49.827Z - DEBUG- demo : hello from 'debug' level\n2023-03-28T15:50:49.827Z - INFO - demo : hello from 'info' level\n\n\n2023-03-28T15:50:49.827Z - WARN - demo : hello from 'warn' level\n2023-03-28T15:50:49.827Z - ERROR- demo : hello from 'error' level\n")),(0,o.kt)("p",null,"To change the logging level use the property level:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"logger.setLevel(nope.WARN);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"logger.trace(\"hello from 'trace' level\")\nlogger.debug(\"hello from 'debug' level\")\nlogger.info(\"hello from 'info' level\")\nlogger.warn(\"hello from 'warn' level\")\nlogger.error(\"hello from 'error' level\")\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"2023-03-28T15:52:36.027Z- WARN - demo: hello from 'warn' level\n2023-03-28T15:52:36.027Z- ERROR- demo: hello from 'error' level\n")),(0,o.kt)("p",null,"As you can see you are able to change the available output."),(0,o.kt)("h2",{id:"logging-to-a-file"},"Logging to a ",(0,o.kt)("inlineCode",{parentName:"h2"},"file")),(0,o.kt)("p",null,"to log content to a file please use the function ``"),(0,o.kt)("h2",{id:"converting-the-loggers-to-an-eventemitter"},"converting the loggers to an ",(0,o.kt)("inlineCode",{parentName:"h2"},"eventemitter")),(0,o.kt)("p",null,"to log content to a file please use the function ``"))}p.isMDXComponent=!0}}]);